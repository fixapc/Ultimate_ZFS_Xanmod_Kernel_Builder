# ocamlopt
# Autogenerated from man page /usr/share/man/man1/ocamlopt.1.gz
complete -c ocamlopt -s a -d 'Build a library (. cmxa/. a file) with the object files (. cmx/'
complete -c ocamlopt -o absname -d 'Show absolute filenames in error messages'
complete -c ocamlopt -o annot -d 'Deprecated since OCaml 4. 11.  Please use  -bin-annot instead'
complete -c ocamlopt -o bin-annot -d 'Dump detailed information about the compilation (types, bindings, tail-calls,…'
complete -c ocamlopt -s c -d 'Compile only.  Suppress the linking phase of the compilation'
complete -c ocamlopt -o cc -d 'Use  ccomp as the C linker called to build the final executable and as the C …'
complete -c ocamlopt -o cclib-l -d 'Pass the  -l libname option to the linker'
complete -c ocamlopt -o ccopt -d 'Pass the given option to the C compiler and linker'
complete -c ocamlopt -o color -d 'Enable or disable colors in compiler messages (especially warnings and errors)'
complete -c ocamlopt -o error-style -d 'Control the way error messages and warnings are printed'
complete -c ocamlopt -o compact -d 'Optimize the produced code for space rather than for time'
complete -c ocamlopt -o config -d 'Print the version number of  ocamlopt (1) and a detailed summary of its confi…'
complete -c ocamlopt -o config-var -d 'Print the value of a specific configuration variable from the  -config output…'
complete -c ocamlopt -o dependocamldep-args -d 'Compute dependencies, as ocamldep would do'
complete -c ocamlopt -o for-pack -d 'Generate an object file (. cmx and '
complete -c ocamlopt -s g -d 'Add debugging information while compiling and linking'
complete -c ocamlopt -s i -d 'Cause the compiler to print all defined names (with their inferred types or t…'
complete -c ocamlopt -s I -d 'Add the given directory to the list of directories searched for compiled inte…'
complete -c ocamlopt -o impl -d 'Compile the file  filename as an implementation file, even if its extension i…'
complete -c ocamlopt -o inline -d 'Set aggressiveness of inlining to R n , where  n is a positive integer'
complete -c ocamlopt -o insn-sched -d 'Enables the instruction scheduling pass in the compiler backend'
complete -c ocamlopt -o intf -d 'Compile the file  filename as an interface file, even if its extension is not '
complete -c ocamlopt -o intf-suffix -d 'Recognize file names ending with  string as interface files (instead of the d…'
complete -c ocamlopt -o keep-docs -d 'Keep documentation strings in generated . cmi files'
complete -c ocamlopt -o keep-locs -d 'Keep locations in generated . cmi files'
complete -c ocamlopt -o labels -d 'Labels are not ignored in types, labels may be used in applications, and labe…'
complete -c ocamlopt -o linkall -d 'Force all modules contained in libraries to be linked in'
complete -c ocamlopt -o linscan -d 'Use linear scan register allocation'
complete -c ocamlopt -o match-context-rows -d 'Set number of rows of context used during pattern matching compilation'
complete -c ocamlopt -o no-alias-deps -d 'Do not record dependencies for module aliases'
complete -c ocamlopt -o no-app-funct -d 'Deactivates the applicative behaviour of functors'
complete -c ocamlopt -o noassert -d 'Do not compile assertion checks'
complete -c ocamlopt -o noautolink -d 'When linking '
complete -c ocamlopt -o nodynlink -d 'Allow the compiler to use some optimizations that are valid only for code tha…'
complete -c ocamlopt -o no-insn-sched -d 'Disables the instruction scheduling pass in the compiler backend'
complete -c ocamlopt -o nostdlib -d 'Do not automatically add the standard library directory to the list of direct…'
complete -c ocamlopt -o nolabels -d 'Ignore non-optional labels in types'
complete -c ocamlopt -s o -d 'Specify the name of the output file produced by the linker'
complete -c ocamlopt -o opaque -d 'When compiling a '
complete -c ocamlopt -o open -d 'Opens the given module before processing the interface or implementation files'
complete -c ocamlopt -o output-obj -d 'Cause the linker to produce a C object file instead of an executable file'
complete -c ocamlopt -o pack -d 'Build an object file (. cmx and '
complete -c ocamlopt -o pp -d 'Cause the compiler to call the given  command as a preprocessor for each sour…'
complete -c ocamlopt -o ppx -d 'After parsing, pipe the abstract syntax tree through the preprocessor R comma…'
complete -c ocamlopt -o principal -d 'Check information path during type-checking, to make sure that all types are …'
complete -c ocamlopt -o rectypes -d 'Allow arbitrary recursive types during type-checking'
complete -c ocamlopt -o runtime-variant -d 'Add  suffix to the name of the runtime library that will be used by the progr…'
complete -c ocamlopt -s S -d 'Keep the assembly code produced during the compilation'
complete -c ocamlopt -o stop-after -d 'Stop compilation after the given compilation pass'
complete -c ocamlopt -o save-ir-after -d 'Save intermediate representation after the given compilation pass'
complete -c ocamlopt -o safe-string -d 'Enforce the separation between types  string and bytes , thereby making strin…'
complete -c ocamlopt -o shared -d 'Build a plugin (usually '
complete -c ocamlopt -o short-paths -d 'When a type is visible under several module-paths, use the shortest one when …'
complete -c ocamlopt -o strict-sequence -d 'The left-hand part of a sequence must have type unit'
complete -c ocamlopt -o unboxed-types -d 'When a type is unboxable (i. e'
complete -c ocamlopt -o no-unboxed-types -d 'When a type is unboxable  it will be boxed unless annotated with  [@@ocaml'
complete -c ocamlopt -o unsafe -d 'Turn bound checking off for array and string accesses (the  v. (i) and s'
complete -c ocamlopt -o unsafe-string -d 'Identify the types  string and bytes , thereby making strings writable'
complete -c ocamlopt -s v -d 'Print the version number of the compiler and the location of the standard lib…'
complete -c ocamlopt -o verbose -d 'Print all external commands before they are executed, in particular invocatio…'
complete -c ocamlopt -o version -o vnum -d 'Print the version number of the compiler in short form (e. g.  "3. 11'
complete -c ocamlopt -s w -d 'Enable, disable, or mark as fatal the warnings specified by the argument R wa…'
complete -c ocamlopt -o warn-error -d 'Mark as fatal the warnings specified in the argument R warning-list '
complete -c ocamlopt -o warn-help -d 'Show the description of all available warning numbers'
complete -c ocamlopt -o where -d 'Print the location of the standard library, then exit'
complete -c ocamlopt -o with-runtime -d 'Include the runtime system in the generated program.  This is the default'
complete -c ocamlopt -o without-runtime -d 'The compiler does not include the runtime system (nor a reference to it) in t…'
complete -c ocamlopt -o cclib -d 'options are passed on the command line, these options are stored in the resul…'
complete -c ocamlopt -s l -d 'Pass the'
complete -c ocamlopt -s L -d 'causes the C linker to search for C libraries in directory dir '
complete -c ocamlopt -o depend -d 'Compute dependencies, as ocamldep would do'
complete -c ocamlopt -o output-complete-obj -d 'Same as'
complete -c ocamlopt -o with-debug-runtime -d 'then the d suffix is supported and gives a debug version of the runtime'
complete -c ocamlopt -o a+31 -d '(only warning 31 is fatal)'
complete -c ocamlopt -o help -l help -d 'Display a short usage summary and exit'
complete -c ocamlopt -o ffast-math -d 'Use the IA32 instructions to compute trigonometric and exponential functions,…'
complete -c ocamlopt -o fPIC -d 'Generate position-independent machine code.   This is the default'
complete -c ocamlopt -o fno-PIC -d 'Generate position-dependent machine code'
complete -c ocamlopt -o flarge-toc -d 'Enables the PowerPC large model allowing the TOC (table of contents) to be ar…'
complete -c ocamlopt -o fsmall-toc -d 'Enables the PowerPC small model allowing the TOC to be up to 64 kbytes per co…'
complete -c ocamlopt -o farch -d 'Select the ARM target architecture'
complete -c ocamlopt -o ffpu -d 'Select the floating-point hardware'
complete -c ocamlopt -o fthumb -d 'Enable Thumb/Thumb-2 code generation'
complete -c ocamlopt -o fno-thumb -d 'Disable Thumb/Thumb-2 code generation'

