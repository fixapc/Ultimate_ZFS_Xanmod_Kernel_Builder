# fio
# Autogenerated from man page /usr/share/man/man1/fio.1.gz
complete -c fio -l debug -d 'Enable verbose tracing type of various fio actions'
complete -c fio -l parse-only -d 'Parse options only, don\'t start any I/O'
complete -c fio -l merge-blktrace-only -d 'Merge blktraces only, don\'t start any I/O'
complete -c fio -l output -d 'Write output to filename'
complete -c fio -l output-format -d 'Set the reporting format to `normal\', `terse\', `json\', or `json+\''
complete -c fio -l bandwidth-log -d 'Generate aggregate bandwidth logs'
complete -c fio -l minimal -d 'Print statistics in a terse, semicolon-delimited format'
complete -c fio -l append-terse -d 'Print statistics in selected mode AND terse, semicolon-delimited format'
complete -c fio -l terse-version -d 'Set terse version output format (default `3\', or `2\', `4\', `5\')'
complete -c fio -l version -d 'Print version information and exit'
complete -c fio -l help -d 'Print a summary of the command line options and exit'
complete -c fio -l cpuclock-test -d 'Perform test and validation of internal CPU clock'
complete -c fio -l crctest -d 'Test the speed of the built-in checksumming functions'
complete -c fio -l cmdhelp -d 'Print help information for command.  May be `all\' for all commands'
complete -c fio -l enghelp -d 'List all commands defined by ioengine, or print help for command defined by i…'
complete -c fio -l showcmd -d 'Convert jobfile to a set of command-line options'
complete -c fio -l readonly -d 'Turn on safety read-only checks, preventing writes and trims'
complete -c fio -l eta -d 'Specifies when real-time ETA estimate should be printed'
complete -c fio -l eta-interval -d 'By default, fio requests client ETA status roughly every second'
complete -c fio -l eta-newline -d 'Force a new line for every time period passed'
complete -c fio -l status-interval -d 'Force a full status dump of cumulative (from job start) values at time interv…'
complete -c fio -l section -d 'Only run specified section name in job file'
complete -c fio -l alloc-size -d 'Allocate additional internal smalloc pools of size kb in KiB'
complete -c fio -l warnings-fatal -d 'All fio parser warnings are fatal, causing fio to exit with an error'
complete -c fio -l max-jobs -d 'Set the maximum number of threads/processes to support to nr'
complete -c fio -l server -d 'Start a backend server, with args specifying what to listen to'
complete -c fio -l daemonize -d 'Background a fio server, writing the pid to the given pidfile file'
complete -c fio -l client -d 'Instead of running the jobs locally, send and run them on the given hostname …'
complete -c fio -l remote-config -d 'Tell fio server to load this local file'
complete -c fio -l idle-prof -d 'Report CPU idleness.  option is one of the following: . RS . RS'
complete -c fio -l inflate-log -d 'Inflate and output compressed log'
complete -c fio -l trigger-file -d 'Execute trigger command when file exists'
complete -c fio -l trigger-timeout -d 'Execute trigger at this time'
complete -c fio -l trigger -d 'Set this command as local trigger'
complete -c fio -l trigger-remote -d 'Set this command as remote trigger'
complete -c fio -l aux-path -d 'Use the directory specified by path for generated state files instead of the …'
complete -c fio -o 15 -d 'priority class'

