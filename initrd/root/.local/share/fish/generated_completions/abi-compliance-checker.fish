# abi-compliance-checker
# Autogenerated from man page /usr/share/man/man1/abi-compliance-checker.1.gz
complete -c abi-compliance-checker -s h -o help -d 'Print this help'
complete -c abi-compliance-checker -s i -o info -d 'Print complete info including all options'
complete -c abi-compliance-checker -s v -o version -d 'Print version information'
complete -c abi-compliance-checker -o dumpversion -d 'Print the tool version (2. 3) and don\'t do anything else.  GENERAL OPTIONS:'
complete -c abi-compliance-checker -s l -o library -d 'Any name of the library'
complete -c abi-compliance-checker -o old -o d1 -d 'Descriptor of the 1st (old) library version'
complete -c abi-compliance-checker -o new -o d2 -d 'Descriptor of the 2nd (new) library version'
complete -c abi-compliance-checker -o dump -d 'Create library ABI dump for the input XML descriptor'
complete -c abi-compliance-checker -o filter -d 'A path to XML descriptor with skip_* rules to filter analyzed symbols in the …'
complete -c abi-compliance-checker -o debug -d 'Debugging mode.  Print debug info on the screen'
complete -c abi-compliance-checker -o ext -o extended -d 'If your library A is supposed to be used by other library B and you want to c…'
complete -c abi-compliance-checker -o static -d 'Check static libraries instead of the shared ones'
complete -c abi-compliance-checker -o gcc-path -d 'Path to the cross GCC compiler to use instead of the usual (host) GCC'
complete -c abi-compliance-checker -o gcc-prefix -d 'GCC toolchain prefix'
complete -c abi-compliance-checker -o gcc-options -d 'Additional compiler options'
complete -c abi-compliance-checker -o count-symbols -d 'Count total public symbols in the ABI dump'
complete -c abi-compliance-checker -o use-dumps -d 'Make dumps for two versions of a library and compare dumps'
complete -c abi-compliance-checker -o xml -d 'Alias for: --report-format=,xml/ or --dump-format=,xml/'
complete -c abi-compliance-checker -o app -o application -d 'This option allows one to specify the application that should be checked for …'
complete -c abi-compliance-checker -o headers-only -d 'Check header files without libraries'
complete -c abi-compliance-checker -o v1 -o vnum1 -d 'Specify 1st library version outside the descriptor'
complete -c abi-compliance-checker -o v2 -o vnum2 -d 'Specify 2nd library version outside the descriptor'
complete -c abi-compliance-checker -o relpath1 -d 'Replace {RELPATH} macros to PATH in the 1st XML-descriptor (-d1)'
complete -c abi-compliance-checker -o relpath2 -d 'Replace {RELPATH} macros to PATH in the 2nd XML-descriptor (-d2)'
complete -c abi-compliance-checker -o test -d 'Run internal tests'
complete -c abi-compliance-checker -o test-dump -d 'Test ability to create, read and compare ABI dumps'
complete -c abi-compliance-checker -o test-abi-dumper -d 'Compare ABI dumps created by the ABI Dumper tool.  REPORT OPTIONS:'
complete -c abi-compliance-checker -o binary -o bin -o abi -d 'Show binary compatibility problems only'
complete -c abi-compliance-checker -o source -o src -o api -d 'Show source compatibility problems only'
complete -c abi-compliance-checker -s s -o strict -d 'Treat all compatibility warnings as problems'
complete -c abi-compliance-checker -o report-path -d 'Path to compatibility report'
complete -c abi-compliance-checker -o bin-report-path -d 'Path to binary compatibility report'
complete -c abi-compliance-checker -o src-report-path -d 'Path to source compatibility report'
complete -c abi-compliance-checker -o show-retval -d 'Show the symbol\'s return type in the report'
complete -c abi-compliance-checker -o stdout -d 'Print analysis results (compatibility reports and ABI dumps) to stdout instea…'
complete -c abi-compliance-checker -o report-format -d 'Change format of compatibility report'
complete -c abi-compliance-checker -o old-style -d 'Generate old-style report'
complete -c abi-compliance-checker -o title -d 'Change library name in the report title to NAME'
complete -c abi-compliance-checker -o component -d 'The component name in the title and summary of the HTML report'
complete -c abi-compliance-checker -s p -o params -d 'Path to file with the function parameter names'
complete -c abi-compliance-checker -o limit-affected -d 'The maximum number of affected symbols listed under the description of the ch…'
complete -c abi-compliance-checker -o list-affected -d 'Generate file with the list of incompatible symbols beside the HTML compatibi…'
complete -c abi-compliance-checker -o dump-path -d 'Specify a *. dump file path where to generate an ABI dump'
complete -c abi-compliance-checker -o dump-format -d 'Change format of ABI dump'
complete -c abi-compliance-checker -o check -d 'Check completeness of the ABI dump'
complete -c abi-compliance-checker -o extra-info -d 'Dump extra info to DIR'
complete -c abi-compliance-checker -o extra-dump -d 'Create extended ABI dump containing all symbols from the translation unit'
complete -c abi-compliance-checker -o relpath -d 'Replace {RELPATH} macros to PATH in the XML-descriptor used for dumping the l…'
complete -c abi-compliance-checker -o vnum -d 'Specify the library version in the generated ABI dump'
complete -c abi-compliance-checker -o sort -d 'Enable sorting of data in ABI dumps.  FILTER SYMBOLS OPTIONS:'
complete -c abi-compliance-checker -o symbols-list -d 'This option allows one to specify a file with a list of symbols (mangled name…'
complete -c abi-compliance-checker -o types-list -d 'This option allows one to specify a file with a list of types that should be …'
complete -c abi-compliance-checker -o skip-symbols -d 'The list of symbols that should not be checked'
complete -c abi-compliance-checker -o skip-types -d 'The list of types that should not be checked'
complete -c abi-compliance-checker -o skip-internal-symbols -d 'Do not check symbols matched by the regular expression'
complete -c abi-compliance-checker -o skip-internal-types -d 'Do not check types matched by the regular expression'
complete -c abi-compliance-checker -o keep-cxx -d 'Check _ZS*, _ZNS* and _ZNKS* symbols'
complete -c abi-compliance-checker -o keep-reserved -d 'Report changes in reserved fields.  FILTER HEADERS OPTIONS:'
complete -c abi-compliance-checker -o skip-headers -d 'The file with the list of header files, that should not be checked'
complete -c abi-compliance-checker -o headers-list -d 'The file with a list of headers, that should be checked/dumped'
complete -c abi-compliance-checker -o header -d 'Check/Dump ABI of this header only'
complete -c abi-compliance-checker -o nostdinc -d 'Do not search in GCC standard system directories for header files'
complete -c abi-compliance-checker -o tolerance -d 'Apply a set of heuristics to successfully compile input header files'
complete -c abi-compliance-checker -o tolerant -d 'Enable highest tolerance level [1234]'
complete -c abi-compliance-checker -o skip-unidentified -d 'Skip header files in \'headers\' and \'include_preamble\' sections of the XML des…'
complete -c abi-compliance-checker -o skip-typedef-uncover -d 'Do not report a problem if type is covered or uncovered by typedef (useful fo…'
complete -c abi-compliance-checker -o check-private-abi -d 'Check data types from the private part of the ABI when comparing ABI dumps cr…'
complete -c abi-compliance-checker -o disable-constants-check -d 'Do not check for changes in constants'
complete -c abi-compliance-checker -o skip-added-constants -d 'Do not detect added constants'
complete -c abi-compliance-checker -o skip-removed-constants -d 'Do not detect removed constants.  OTHER OPTIONS:'
complete -c abi-compliance-checker -o lang -d 'Set library language (C or C++)'
complete -c abi-compliance-checker -o arch -d 'Set library architecture (x86, x86_64, ia64, arm, ppc32, ppc64, s390, ect. )'
complete -c abi-compliance-checker -o mingw-compatible -d 'If input header files are compatible with the MinGW GCC compiler, then you ca…'
complete -c abi-compliance-checker -o cxx-incompatible -d 'Set this option if input C header files use C++ keywords'
complete -c abi-compliance-checker -o cpp-compatible -d 'Do nothing'
complete -c abi-compliance-checker -o quick -d 'Quick analysis.  Disable check of some template instances'
complete -c abi-compliance-checker -o force -d 'Try to enable this option if the tool checked not all types and symbols in he…'
complete -c abi-compliance-checker -o dump-system -o sysroot -d 'Find all the shared libraries and header files in DIR directory, create XML d…'
complete -c abi-compliance-checker -o cmp-systems -d 'Compare two ABI dumps of a system'
complete -c abi-compliance-checker -o sysinfo -d 'This option should be used with -dump-system option to dump ABI of operating …'
complete -c abi-compliance-checker -o libs-list -d 'The file with a list of libraries, that should be dumped by the -dump-system …'
complete -c abi-compliance-checker -o log-path -d 'Log path for all messages.  Default: logs/LIB_NAME/VERSION/log. txt'
complete -c abi-compliance-checker -o log1-path -d 'Log path for 1st version of a library.  Default: logs/LIB_NAME/V1/log. txt'
complete -c abi-compliance-checker -o log2-path -d 'Log path for 2nd version of a library.  Default: logs/LIB_NAME/V2/log. txt'
complete -c abi-compliance-checker -o logging-mode -d 'Change logging mode'
complete -c abi-compliance-checker -s q -o quiet -d 'Print all messages to the file instead of stdout and stderr'

