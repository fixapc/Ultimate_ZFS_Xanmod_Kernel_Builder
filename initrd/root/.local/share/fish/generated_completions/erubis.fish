# erubis
# Autogenerated from man page /usr/share/man/man1/erubis.1.gz
complete -c erubis -s h -l help -d help
complete -c erubis -s v -d version
complete -c erubis -s x -d 'show converted code'
complete -c erubis -s X -d 'show converted code, only ruby code and no text part'
complete -c erubis -s N -d 'numbering: add line numbers            (for \'-x/-X\')'
complete -c erubis -s U -d 'unique: compress empty lines to a line (for \'-x/-X\')'
complete -c erubis -s C -d 'compact: remove empty lines            (for \'-x/-X\')'
complete -c erubis -s b -d 'body only: no preamble nor postamble   (for \'-x/-X\')'
complete -c erubis -s z -d 'syntax checking'
complete -c erubis -s e -d 'escape (equal to \'--E Escape\')'
complete -c erubis -s p -d 'embedded pattern (default \'<% %>\')'
complete -c erubis -s l -d 'convert but no execute (ruby/php/c/java/scheme/perl/js)'
complete -c erubis -s E -d 'enhancer names (Escape, PercentLine, BiPattern, . )'
complete -c erubis -s I -d 'library include path'
complete -c erubis -s K -d 'kanji code (euc/sjis/utf8) (default none)'
complete -c erubis -s c -d 'context data string (yaml inline style or ruby code)'
complete -c erubis -s f -d 'context data file (\'*. yaml\', \'*. yml\', or \'*\')'
complete -c erubis -s T -d 'don\'t expand tab characters in YAML file'
complete -c erubis -s S -d 'convert mapping key from string to symbol in YAML file'
complete -c erubis -s B -d 'invoke \'result(binding)\' instead of \'evaluate(context)\''
complete -c erubis -l pi -d 'parse \'<?name .  ?>\' instead of \'<% .  %>\' . SS "supported properties:"'
complete -c erubis -l escapefunc -d ': escape function name'
complete -c erubis -l pattern -d ': embed pattern'
complete -c erubis -l trim -d ': trim spaces around <% .  %>'
complete -c erubis -l preamble -d ': preamble (no preamble when false)'
complete -c erubis -l postamble -d ': postamble (no postamble when false)'
complete -c erubis -l escape -d ': escape expression or not in default'
complete -c erubis -l embchar -d ': char for embedded expression pattern(\'@{. }@\')'
complete -c erubis -l indent -d ': indent spaces (ex.  \'  \')'
complete -c erubis -l out -d ': output file pointer name'
complete -c erubis -l buf -d ': output buffer name . HP --bufclass="StringBuffer" : output buffer class (ex'
complete -c erubis -l func -d ': function name (ex.  \'display\')'
complete -c erubis -l bufclass -d '* scheme'
complete -c erubis -l docwrite -d ': use \'document. write()\' when true EXAMPLES'

